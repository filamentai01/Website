import React, { useState } from "react";
import 'bootstrap/dist/css/bootstrap.min.css';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';
import './Services.css';
import ServicesCard from "./ServicesCard";
import ServicesCardMobile from "./ServicesCardMobile";
import { forwardRef } from "react";
import Slider from "react-slick";
import 'slick-carousel/slick/slick.css'
import 'slick-carousel/slick/slick-theme.css';
import rightArrow from './icons/right-arrow.svg';
import leftArrow from './icons/left-arrow.svg';

const Services = forwardRef((props, ref) => {

    const [buttontarget, setTarget] = useState('facialRecognition')

    function SampleNextArrow(props) {
        const { className, style, onClick } = props;
        return (
            
                <img className={className} onClick={onClick}  style={{ ...style, display: "block", background: "#013096", right:"2px", top: "12px ",  height:"30px", width:"30px", padding:"5px"}} src={rightArrow} alt="next" />
               
        );
    }

    function SamplePrevArrow(props) {
        const { className, style, onClick } = props;
        return (
            
                 <img className={className} onClick={onClick} src={leftArrow} alt="prev"  style={{ ...style, display: "block", background: "#013096", left:"250px", top: "12px ", height:"30px", width:"30px", padding:"5px"}}/>
        );
    }

    const settings = {
        infinite: true,
        speed: 500,
        slidesToShow: 1,
        slidesToScroll: 1,
        initialSlide: 0,
        nextArrow: <SampleNextArrow />,
        prevArrow: <SamplePrevArrow />,
        dots: true,
        responsive: [
            {
                breakpoint: 1024,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    initialSlide: 0,
                    infinite: true,
                    nextArrow: <SampleNextArrow />,
                    prevArrow: <SamplePrevArrow />,
                    dots: true,
                }
            },
            {
                breakpoint: 600,
                settings: {
                    infinite: true,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    initialSlide: 0,
                    nextArrow: <SampleNextArrow />,
                    prevArrow: <SamplePrevArrow />,
                    dots: true,
                }
            },
            {
                breakpoint: 480,
                settings: {
                    infinite: true,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    initialSlide: 0,
                    nextArrow: <SampleNextArrow />,
                    prevArrow: <SamplePrevArrow />,
                    dots: true,
                }
            },
            {
                breakpoint: 375,
                settings: {
                    infinite: true,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    initialSlide: 0,
                    nextArrow: <SampleNextArrow />,
                    prevArrow: <SamplePrevArrow />,
                    dots: true,
                }
            }
        ]
    };

    const obj = [
    
    {
        "value": 'facialRecognition'
    },
    {
        "value": 'objectDetection'
    },
    {
        "value": 'healthAndSafety'
    },
    {
        "value": 'security'
    },
    {
        "value": 'productivity'
    },
    {
        "value": 'footfallMonitoring'
    },
    {
        "value": 'bayAnalytics'
    },
    {
        "value": 'defectAnalytics'
    },
    ]


    return (
        <>
            <div className="services-container " ref={ref}>
                <Container>
                    <div className="d-none d-lg-block">
                        <Row className="font-face-title mb-4"> <div className="pt-5">Our Services</div></Row>
                        <Row>
                            <Col md={5} xs={5} lg={5} sm={5} className="mt-5 mb-5">
                                <div className="mb-4 d-flex">
                                    <div className="services-button-container">
                                        <button type="button" class={buttontarget == 'facialRecognition' ? "btn btn-primary services selected" : "btn btn-primary services"} onClick={() => setTarget("facialRecognition")}>

                                            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <g clip-path="url(#clip0_593_584)">
                                                    <path d="M11.8438 15.5495C11.4121 15.5495 10.9981 15.721 10.6929 16.0262C10.3876 16.3314 10.2161 16.7454 10.2161 17.1771C10.2161 17.6088 10.3876 18.0227 10.6929 18.328C10.9981 18.6332 11.4121 18.8047 11.8438 18.8047C12.0575 18.8047 12.2691 18.7626 12.4666 18.6808C12.6641 18.599 12.8435 18.4791 12.9946 18.328C13.1458 18.1768 13.2657 17.9974 13.3475 17.7999C13.4293 17.6025 13.4714 17.3908 13.4714 17.1771C13.4714 16.9633 13.4293 16.7517 13.3475 16.5542C13.2657 16.3568 13.1458 16.1773 12.9946 16.0262C12.8435 15.8751 12.6641 15.7552 12.4666 15.6734C12.2691 15.5916 12.0575 15.5495 11.8438 15.5495ZM19.6563 15.5495C19.2246 15.5495 18.8106 15.721 18.5054 16.0262C18.2001 16.3314 18.0286 16.7454 18.0286 17.1771C18.0286 17.6088 18.2001 18.0227 18.5054 18.328C18.8106 18.6332 19.2246 18.8047 19.6563 18.8047C20.0879 18.8047 20.5019 18.6332 20.8071 18.328C21.1124 18.0227 21.2839 17.6088 21.2839 17.1771C21.2839 16.7454 21.1124 16.3314 20.8071 16.0262C20.5019 15.721 20.0879 15.5495 19.6563 15.5495ZM15.75 2.85417C14.0401 2.85417 12.3469 3.19096 10.7671 3.84532C9.18738 4.49968 7.75198 5.45878 6.54288 6.66788C4.101 9.10976 2.72917 12.4217 2.72917 15.875C2.72917 19.3283 4.101 22.6402 6.54288 25.0821C7.75198 26.2912 9.18738 27.2503 10.7671 27.9047C12.3469 28.559 14.0401 28.8958 15.75 28.8958C19.2033 28.8958 22.5152 27.524 24.9571 25.0821C27.399 22.6402 28.7708 19.3283 28.7708 15.875C28.7708 14.1651 28.434 12.4719 27.7797 10.8921C27.1253 9.31238 26.1662 7.87698 24.9571 6.66788C23.748 5.45878 22.3126 4.49968 20.7329 3.84532C19.1531 3.19096 17.4599 2.85417 15.75 2.85417ZM15.75 26.2917C12.9873 26.2917 10.3378 25.1942 8.3843 23.2407C6.4308 21.2872 5.33333 18.6377 5.33333 15.875C5.29427 15.5028 5.29427 15.1275 5.33333 14.7552C8.43483 13.3982 10.8897 10.8919 12.1823 7.76302C13.3827 9.46497 14.9744 10.8536 16.8234 11.8121C18.6724 12.7706 20.7246 13.2709 22.8073 13.2708C23.7969 13.2708 24.7734 13.1536 25.737 12.9323C27.3646 18.4792 24.2135 24.2474 18.6927 25.862C17.7031 26.1484 16.7396 26.2917 15.75 26.2917ZM0.125 2.85417C0.125 2.1635 0.399367 1.50112 0.887743 1.01274C1.37612 0.524367 2.0385 0.25 2.72917 0.25L7.9375 0.25V2.85417H2.72917V8.0625H0.125V2.85417ZM31.375 28.8958C31.375 29.5865 31.1006 30.2489 30.6123 30.7373C30.1239 31.2256 29.4615 31.5 28.7708 31.5H23.5625V28.8958H28.7708V23.6875H31.375V28.8958ZM2.72917 31.5C2.0385 31.5 1.37612 31.2256 0.887743 30.7373C0.399367 30.2489 0.125 29.5865 0.125 28.8958V23.6875H2.72917V28.8958H7.9375V31.5H2.72917ZM28.7708 0.25C29.4615 0.25 30.1239 0.524367 30.6123 1.01274C31.1006 1.50112 31.375 2.1635 31.375 2.85417V8.0625H28.7708V2.85417H23.5625V0.25H28.7708Z" fill={buttontarget == 'facialRecognition' ? "#FFFAFA" : "#013096"} />
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_593_584">
                                                        <rect width="31.25" height="31.25" fill="white" transform="translate(0.125 0.25)" />
                                                    </clipPath>
                                                </defs>
                                            </svg>


                                            <div className="font-face-description mt-2">{'Facial Recognition Toolkit'}</div>
                                        </button>
                                    </div>
                                    <div >
                                        <button type="button" class={buttontarget == 'objectDetection' ? "btn btn-primary services selected" : "btn btn-primary services"} onClick={() => setTarget("objectDetection")}>
                                            <svg width="31" height="32" viewBox="0 0 31 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M23.3195 2.21736C23.3196 1.69573 23.1125 1.19541 22.7438 0.826457C22.3751 0.457506 21.8749 0.250148 21.3532 0.25C21.0949 0.249927 20.8392 0.300727 20.6005 0.399501C20.3619 0.498274 20.145 0.643087 19.9623 0.82567C19.5934 1.19441 19.386 1.69462 19.3859 2.21625C19.3859 3.30211 21.3527 6.96842 21.3527 6.96842C21.3527 6.96842 23.3195 3.30322 23.3195 2.21736ZM20.4127 2.21736C20.4083 2.09128 20.4293 1.96559 20.4745 1.8478C20.5197 1.73001 20.5881 1.62252 20.6757 1.53174C20.7633 1.44095 20.8683 1.36874 20.9844 1.31939C21.1005 1.27004 21.2254 1.24457 21.3515 1.24449C21.4777 1.24442 21.6026 1.26974 21.7187 1.31895C21.8349 1.36816 21.94 1.44026 22.0277 1.53094C22.1154 1.62162 22.184 1.72902 22.2293 1.84676C22.2746 1.9645 22.2958 2.09016 22.2915 2.21625C22.2833 2.4598 22.1808 2.69064 22.0056 2.86007C21.8305 3.0295 21.5963 3.12428 21.3527 3.12442C21.109 3.12457 20.8747 3.03006 20.6994 2.86084C20.524 2.69162 20.4212 2.4609 20.4127 2.21736ZM25.6505 18.6556C25.0268 18.6556 24.4287 18.708 23.8797 18.7926L9.85701 13.6228C10.0797 13.4223 10.2045 13.1996 10.2045 12.9657C10.2016 12.8424 10.1679 12.7218 10.1065 12.6149L19.4727 10.1224C19.985 10.275 20.6121 10.3675 21.3059 10.3675C22.9987 10.3675 24.3686 9.82842 24.3686 9.16242C24.3686 8.4942 22.9987 7.95628 21.3059 7.95628C19.6131 7.95628 18.2432 8.49643 18.2432 9.16242C18.2432 9.24038 18.2655 9.315 18.3033 9.38739L8.51611 11.6449C7.69551 11.4134 6.84616 11.2998 5.99357 11.3074C3.66926 11.3074 1.78376 12.0503 1.78376 12.9668C1.78376 13.8834 3.66926 14.6263 5.99357 14.6263C6.63283 14.6263 7.22978 14.565 7.77327 14.4648L21.1266 19.8841C20.915 20.0979 20.7858 20.3295 20.7858 20.5779C20.7858 20.7895 20.8927 20.9833 21.0486 21.1715L7.17855 26.3625C7.00258 26.3569 6.82662 26.3513 6.64731 26.3513C3.03891 26.3513 0.109863 27.5051 0.109863 28.924C0.109863 30.3462 3.03891 31.5 6.64731 31.5C10.2557 31.5 13.1848 30.3484 13.1848 28.9251C13.1848 28.6801 13.0923 28.444 12.9286 28.2201L24.3619 22.4133C24.774 22.4578 25.2005 22.4857 25.6482 22.4857C28.3356 22.4857 30.5151 21.6281 30.5151 20.5668C30.5151 19.5154 28.3356 18.6556 25.6482 18.6556H25.6505Z" fill={buttontarget == 'objectDetection' ? "#FFFAFA" : "#013096"} />
                                            </svg>

                                            <div className="font-face-description mt-2">{'Object Detection & Tracking Toolkit'}</div>
                                        </button>
                                    </div>
                                </div>
                                <div className="mb-4 d-flex">
                                    <div className="services-button-container">
                                        <button type="button" class={buttontarget == 'healthAndSafety' ? "btn btn-primary services selected" : "btn btn-primary services"} onClick={() => setTarget("healthAndSafety")}>
                                            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <g clip-path="url(#clip0_593_596)">
                                                    <path d="M13.4063 21.4688H18.0938V17.5625H22V12.875H18.0938V8.96875H13.4063V12.875H9.5V17.5625H13.4063V21.4688ZM15.75 31.625C12.1302 30.7135 9.14167 28.6365 6.78438 25.3937C4.42708 22.151 3.24896 18.551 3.25 14.5938V5.0625L15.75 0.375L28.25 5.0625V14.5938C28.25 18.5521 27.0714 22.1526 24.7141 25.3953C22.3568 28.638 19.3687 30.7146 15.75 31.625ZM15.75 28.3437C18.4583 27.4844 20.6979 25.7656 22.4687 23.1875C24.2396 20.6094 25.125 17.7448 25.125 14.5938V7.21094L15.75 3.69531L6.375 7.21094V14.5938C6.375 17.7448 7.26042 20.6094 9.03125 23.1875C10.8021 25.7656 13.0417 27.4844 15.75 28.3437Z" fill={buttontarget == 'healthAndSafety' ? "#FFFAFA" : "#013096"} />
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_593_596">
                                                        <rect width="31.25" height="31.25" fill="white" transform="translate(0.125 0.375)" />
                                                    </clipPath>
                                                </defs>
                                            </svg>
                                            <div className="font-face-description mt-2">{'Health & Safety Compliance Toolkit'}</div>
                                        </button>
                                    </div>
                                    <div>
                                        <button type="button" class={buttontarget == 'security' ? "btn btn-primary services selected" : "btn btn-primary services"} onClick={() => setTarget("security")}>
                                            {/* {
                                            buttontarget == 'security' ?
                                                <svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M2 4.44444C2 3.79614 2.25754 3.17438 2.71596 2.71596C3.17438 2.25754 3.79614 2 4.44444 2H43.5556C44.2039 2 44.8256 2.25754 45.284 2.71596C45.7425 3.17438 46 3.79614 46 4.44444V9.33333C46 9.98164 45.7425 10.6034 45.284 11.0618C44.8256 11.5202 44.2039 11.7778 43.5556 11.7778H4.44444C3.79614 11.7778 3.17438 11.5202 2.71596 11.0618C2.25754 10.6034 2 9.98164 2 9.33333V4.44444ZM14.2222 28.8889C14.2222 31.4821 15.2524 33.9691 17.0861 35.8028C18.9198 37.6365 21.4068 38.6667 24 38.6667C26.5932 38.6667 29.0802 37.6365 30.9139 35.8028C32.7476 33.9691 33.7778 31.4821 33.7778 28.8889C33.7778 26.2957 32.7476 23.8086 30.9139 21.975C29.0802 20.1413 26.5932 19.1111 24 19.1111C21.4068 19.1111 18.9198 20.1413 17.0861 21.975C15.2524 23.8086 14.2222 26.2957 14.2222 28.8889Z" stroke="#FFFAFA" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" />
                                                    <path d="M41.1109 11.7778V28.8889C41.1109 33.427 39.3081 37.7793 36.0992 40.9883C32.8902 44.1972 28.5379 46 23.9998 46C19.4616 46 15.1094 44.1972 11.9004 40.9883C8.69144 37.7793 6.88867 33.427 6.88867 28.8889V11.7778M23.9998 28.8889H24.0242" stroke="#FFFAFA" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" />
                                                </svg>
                                                :
                                                <svg width="50" height="50" viewBox="0 0 50 50" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M3 5.44444C3 4.79614 3.25754 4.17438 3.71596 3.71596C4.17438 3.25754 4.79614 3 5.44444 3H44.5556C45.2039 3 45.8256 3.25754 46.284 3.71596C46.7425 4.17438 47 4.79614 47 5.44444V10.3333C47 10.9816 46.7425 11.6034 46.284 12.0618C45.8256 12.5202 45.2039 12.7778 44.5556 12.7778H5.44444C4.79614 12.7778 4.17438 12.5202 3.71596 12.0618C3.25754 11.6034 3 10.9816 3 10.3333V5.44444ZM15.2222 29.8889C15.2222 32.4821 16.2524 34.9691 18.0861 36.8028C19.9198 38.6365 22.4068 39.6667 25 39.6667C27.5932 39.6667 30.0802 38.6365 31.9139 36.8028C33.7476 34.9691 34.7778 32.4821 34.7778 29.8889C34.7778 27.2957 33.7476 24.8086 31.9139 22.975C30.0802 21.1413 27.5932 20.1111 25 20.1111C22.4068 20.1111 19.9198 21.1413 18.0861 22.975C16.2524 24.8086 15.2222 27.2957 15.2222 29.8889Z" stroke="#013096" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" />
                                                    <path d="M42.1109 12.7778V29.8889C42.1109 34.427 40.3081 38.7793 37.0992 41.9883C33.8902 45.1972 29.5379 47 24.9998 47C20.4616 47 16.1094 45.1972 12.9004 41.9883C9.69144 38.7793 7.88867 34.427 7.88867 29.8889V12.7778M24.9998 29.8889H25.0242" stroke="#013096" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" />
                                                </svg>
                                        } */}
                                            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M2.25 3.90278C2.25 3.49759 2.41096 3.10899 2.69748 2.82248C2.98399 2.53596 3.37259 2.375 3.77778 2.375H28.2222C28.6274 2.375 29.016 2.53596 29.3025 2.82248C29.589 3.10899 29.75 3.49759 29.75 3.90278V6.95833C29.75 7.36352 29.589 7.75212 29.3025 8.03863C29.016 8.32515 28.6274 8.48611 28.2222 8.48611H3.77778C3.37259 8.48611 2.98399 8.32515 2.69748 8.03863C2.41096 7.75212 2.25 7.36352 2.25 6.95833V3.90278ZM9.88889 19.1806C9.88889 20.8013 10.5327 22.3557 11.6788 23.5018C12.8248 24.6478 14.3792 25.2917 16 25.2917C17.6208 25.2917 19.1752 24.6478 20.3212 23.5018C21.4673 22.3557 22.1111 20.8013 22.1111 19.1806C22.1111 17.5598 21.4673 16.0054 20.3212 14.8593C19.1752 13.7133 17.6208 13.0694 16 13.0694C14.3792 13.0694 12.8248 13.7133 11.6788 14.8593C10.5327 16.0054 9.88889 17.5598 9.88889 19.1806Z" stroke={buttontarget == 'security' ? "#FFFAFA" : "#013096"} stroke-width="1.875" stroke-linecap="round" stroke-linejoin="round" />
                                                <path d="M26.6946 8.48615V19.1806C26.6946 22.0169 25.5678 24.7371 23.5622 26.7427C21.5566 28.7483 18.8365 29.875 16.0001 29.875C13.1638 29.875 10.4436 28.7483 8.43799 26.7427C6.4324 24.7371 5.30566 22.0169 5.30566 19.1806V8.48615M16.0001 19.1806H16.0154" stroke={buttontarget == 'security' ? "#FFFAFA" : "#013096"} stroke-width="1.875" stroke-linecap="round" stroke-linejoin="round" />
                                            </svg>
                                            <div className="font-face-description mt-2">{'Security Toolkit'}</div>
                                        </button>
                                    </div>
                                </div>
                                <div className="mb-4 d-flex">
                                    <div className="services-button-container">
                                        <button type="button" class={buttontarget == 'productivity' ? "btn btn-primary services selected" : "btn btn-primary services"} onClick={() => setTarget("productivity")}>
                                            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <g clip-path="url(#clip0_593_611)">
                                                    <path d="M2.729 21.3334V17.6875C2.729 16.9497 2.91911 16.2717 3.29932 15.6537C3.67952 15.0356 4.18386 14.5634 4.81234 14.237C6.15782 13.5643 7.52501 13.0595 8.9139 12.7227C10.3028 12.3859 11.7134 12.2179 13.1457 12.2188C14.1222 12.2188 15.0879 12.2947 16.0428 12.4466C16.9977 12.5986 17.9525 12.8373 18.9074 13.1628C18.5385 13.4666 18.2021 13.7978 17.8983 14.1563C17.5945 14.5148 17.3232 14.8998 17.0845 15.3112C16.4334 15.1376 15.7824 15.0126 15.1313 14.9362C14.4803 14.8598 13.8184 14.8221 13.1457 14.8229C11.9304 14.8229 10.726 14.9697 9.53239 15.2631C8.33881 15.5565 7.15609 15.9957 5.98421 16.5808C5.7889 16.6893 5.63135 16.8412 5.51156 17.0365C5.39176 17.2318 5.3323 17.4488 5.33317 17.6875V18.7292H15.8475C15.8041 19.1632 15.7824 19.5973 15.7824 20.0313C15.7824 20.4653 15.8041 20.8993 15.8475 21.3334H2.729ZM13.1457 10.9167C11.7134 10.9167 10.4873 10.4067 9.46729 9.38675C8.44732 8.36679 7.93734 7.14066 7.93734 5.70837C7.93734 4.27607 8.44732 3.04995 9.46729 2.02998C10.4873 1.01002 11.7134 0.500033 13.1457 0.500033C14.578 0.500033 15.8041 1.01002 16.8241 2.02998C17.844 3.04995 18.354 4.27607 18.354 5.70837C18.354 7.14066 17.844 8.36679 16.8241 9.38675C15.8041 10.4067 14.578 10.9167 13.1457 10.9167ZM13.1457 8.31253C13.8618 8.31253 14.4751 8.05732 14.9855 7.54691C15.4959 7.03649 15.7507 6.42364 15.7498 5.70837C15.7498 4.99222 15.4946 4.37894 14.9842 3.86852C14.4738 3.35811 13.8609 3.10333 13.1457 3.1042C12.4295 3.1042 11.8162 3.35941 11.3058 3.86983C10.7954 4.38024 10.5406 4.99309 10.5415 5.70837C10.5415 6.42451 10.7967 7.03779 11.3071 7.54821C11.8175 8.05863 12.4304 8.3134 13.1457 8.31253ZM26.1665 5.70837C26.1665 7.14066 25.6565 8.36679 24.6366 9.38675C23.6166 10.4067 22.3905 10.9167 20.9582 10.9167C20.7195 10.9167 20.4156 10.8894 20.0467 10.8347C19.6778 10.78 19.374 10.7205 19.1353 10.6563C19.7212 9.96184 20.1717 9.19144 20.4868 8.34509C20.8019 7.49873 20.959 6.61982 20.9582 5.70837C20.9582 4.79691 20.8006 3.918 20.4855 3.07165C20.1704 2.22529 19.7203 1.45489 19.1353 0.76045C19.4391 0.651943 19.7429 0.581197 20.0467 0.54821C20.3505 0.515224 20.6544 0.499165 20.9582 0.500033C22.3905 0.500033 23.6166 1.01002 24.6366 2.02998C25.6565 3.04995 26.1665 4.27607 26.1665 5.70837ZM24.8644 26.5417C23.0632 26.5417 21.5276 25.9067 20.2576 24.6368C18.9877 23.3668 18.3531 21.8316 18.354 20.0313C18.354 18.2084 18.989 16.6676 20.259 15.4089C21.5289 14.1502 23.0641 13.5209 24.8644 13.5209C26.6873 13.5209 28.2281 14.1502 29.4868 15.4089C30.7455 16.6676 31.3748 18.2084 31.3748 20.0313C31.3748 21.8325 30.7455 23.3681 29.4868 24.6381C28.2281 25.908 26.6873 26.5426 24.8644 26.5417ZM23.953 22.961L28.5428 18.3386L27.6313 17.4271L23.953 21.1055L22.0975 19.25L21.186 20.194L23.953 22.961Z" fill={buttontarget == 'productivity' ? "#FFFAFA" : "#013096"} />
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_593_611">
                                                        <rect width="31.25" height="31.25" fill="white" transform="translate(0.125 0.5)" />
                                                    </clipPath>
                                                </defs>
                                            </svg>
                                            <div className="font-face-description mt-2">{'Productivity Toolkit'}</div>
                                        </button>
                                    </div>
                                    <div>
                                        <button type="button" class={buttontarget == 'footfallMonitoring' ? "btn btn-primary services selected" : "btn btn-primary services"} onClick={() => setTarget("footfallMonitoring")}>
                                            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M16 5.38281C15.482 5.38281 14.9852 5.58859 14.6189 5.95487C14.2527 6.32115 14.0469 6.81794 14.0469 7.33594C14.0469 7.85394 14.2527 8.35072 14.6189 8.71701C14.9852 9.08329 15.482 9.28906 16 9.28906C16.518 9.28906 17.0148 9.08329 17.3811 8.71701C17.7473 8.35072 17.9531 7.85394 17.9531 7.33594C17.9531 6.81794 17.7473 6.32115 17.3811 5.95487C17.0148 5.58859 16.518 5.38281 16 5.38281ZM12.0938 7.33594C12.0938 6.29994 12.5053 5.30637 13.2379 4.5738C13.9704 3.84124 14.964 3.42969 16 3.42969C17.036 3.42969 18.0296 3.84124 18.7621 4.5738C19.4947 5.30637 19.9062 6.29994 19.9062 7.33594C19.9062 8.37194 19.4947 9.36551 18.7621 10.0981C18.0296 10.8306 17.036 11.2422 16 11.2422C14.964 11.2422 13.9704 10.8306 13.2379 10.0981C12.5053 9.36551 12.0938 8.37194 12.0938 7.33594ZM25.2773 6.35938C24.8888 6.35938 24.5163 6.51371 24.2415 6.78842C23.9668 7.06313 23.8125 7.43572 23.8125 7.82422C23.8125 8.21272 23.9668 8.58531 24.2415 8.86002C24.5163 9.13473 24.8888 9.28906 25.2773 9.28906C25.6658 9.28906 26.0384 9.13473 26.3131 8.86002C26.5879 8.58531 26.7422 8.21272 26.7422 7.82422C26.7422 7.43572 26.5879 7.06313 26.3131 6.78842C26.0384 6.51371 25.6658 6.35938 25.2773 6.35938ZM21.8594 7.82422C21.8594 7.37536 21.9478 6.93091 22.1196 6.51622C22.2913 6.10153 22.5431 5.72474 22.8605 5.40735C23.1779 5.08996 23.5547 4.8382 23.9693 4.66643C24.384 4.49466 24.8285 4.40625 25.2773 4.40625C25.7262 4.40625 26.1707 4.49466 26.5853 4.66643C27 4.8382 27.3768 5.08996 27.6942 5.40735C28.0116 5.72474 28.2634 6.10153 28.4351 6.51622C28.6069 6.93091 28.6953 7.37536 28.6953 7.82422C28.6953 8.73072 28.3352 9.60009 27.6942 10.2411C27.0532 10.8821 26.1838 11.2422 25.2773 11.2422C24.3708 11.2422 23.5015 10.8821 22.8605 10.2411C22.2195 9.60009 21.8594 8.73072 21.8594 7.82422ZM5.25781 7.82422C5.25781 7.43572 5.41214 7.06313 5.68686 6.78842C5.96157 6.51371 6.33416 6.35938 6.72266 6.35938C7.11116 6.35938 7.48375 6.51371 7.75846 6.78842C8.03317 7.06313 8.1875 7.43572 8.1875 7.82422C8.1875 8.21272 8.03317 8.58531 7.75846 8.86002C7.48375 9.13473 7.11116 9.28906 6.72266 9.28906C6.33416 9.28906 5.96157 9.13473 5.68686 8.86002C5.41214 8.58531 5.25781 8.21272 5.25781 7.82422ZM6.72266 4.40625C5.81615 4.40625 4.94678 4.76636 4.30579 5.40735C3.66479 6.04834 3.30469 6.91772 3.30469 7.82422C3.30469 8.73072 3.66479 9.60009 4.30579 10.2411C4.94678 10.8821 5.81615 11.2422 6.72266 11.2422C7.62916 11.2422 8.49853 10.8821 9.13952 10.2411C9.78052 9.60009 10.1406 8.73072 10.1406 7.82422C10.1406 6.91772 9.78052 6.04834 9.13952 5.40735C8.49853 4.76636 7.62916 4.40625 6.72266 4.40625ZM8.82324 24.4307C8.38157 24.7218 7.86932 24.8879 7.34086 24.9113C6.81239 24.9348 6.28744 24.8147 5.82171 24.5639C5.35598 24.3131 4.96686 23.9408 4.69564 23.4866C4.42442 23.0325 4.28122 22.5134 4.28125 21.9844V15.6367C4.28125 15.5072 4.33269 15.383 4.42426 15.2915C4.51584 15.1999 4.64003 15.1484 4.76953 15.1484H8.70605C8.79513 14.4334 9.08116 13.7572 9.53223 13.1953H4.76953C4.12203 13.1953 3.50105 13.4525 3.0432 13.9104C2.58534 14.3682 2.32813 14.9892 2.32813 15.6367V21.9844C2.32787 22.8253 2.54478 23.652 2.95785 24.3844C3.37091 25.1168 3.96613 25.7302 4.68585 26.165C5.40556 26.5999 6.22538 26.8415 7.06589 26.8665C7.90641 26.8915 8.73913 26.699 9.4834 26.3076C9.17838 25.7152 8.95625 25.0836 8.82324 24.4307ZM22.5166 26.3076C23.2609 26.699 24.0936 26.8915 24.9341 26.8665C25.7746 26.8415 26.5944 26.5999 27.3142 26.165C28.0339 25.7302 28.6291 25.1168 29.0422 24.3844C29.4552 23.652 29.6721 22.8253 29.6719 21.9844V15.6367C29.6719 14.9892 29.4147 14.3682 28.9568 13.9104C28.499 13.4525 27.878 13.1953 27.2305 13.1953H22.4678C22.9184 13.7575 23.2044 14.4335 23.2939 15.1484H27.2305C27.36 15.1484 27.4842 15.1999 27.5757 15.2915C27.6673 15.383 27.7188 15.5072 27.7188 15.6367V21.9844C27.7188 22.5134 27.5756 23.0325 27.3044 23.4866C27.0331 23.9408 26.644 24.3131 26.1783 24.5639C25.7126 24.8147 25.1876 24.9348 24.6591 24.9113C24.1307 24.8879 23.6184 24.7218 23.1768 24.4307C23.0437 25.0836 22.8216 25.7152 22.5166 26.3076ZM12.582 13.1953C11.9345 13.1953 11.3135 13.4525 10.8557 13.9104C10.3978 14.3682 10.1406 14.9892 10.1406 15.6367V22.9609C10.1406 24.5149 10.758 26.0053 11.8568 27.1041C12.9556 28.203 14.446 28.8203 16 28.8203C17.554 28.8203 19.0444 28.203 20.1432 27.1041C21.2421 26.0053 21.8594 24.5149 21.8594 22.9609V15.6367C21.8594 14.9892 21.6022 14.3682 21.1443 13.9104C20.6865 13.4525 20.0655 13.1953 19.418 13.1953H12.582ZM12.0938 15.6367C12.0938 15.5072 12.1452 15.383 12.2368 15.2915C12.3283 15.1999 12.4525 15.1484 12.582 15.1484H19.418C19.5475 15.1484 19.6717 15.1999 19.7632 15.2915C19.8548 15.383 19.9062 15.5072 19.9062 15.6367V22.9609C19.9062 23.9969 19.4947 24.9905 18.7621 25.7231C18.0296 26.4556 17.036 26.8672 16 26.8672C14.964 26.8672 13.9704 26.4556 13.2379 25.7231C12.5053 24.9905 12.0938 23.9969 12.0938 22.9609V15.6367Z" fill={buttontarget == 'footfallMonitoring' ? "#FFFAFA" : "#013096"} />
                                            </svg>


                                            <div className="font-face-description mt-2">{'Footfall Monitoring Toolkit'}</div>
                                        </button>
                                    </div>
                                </div>
                                <div className="mb-4 d-flex">
                                    <div className="services-button-container">
                                        <button type="button" class={buttontarget == 'bayAnalytics' ? "btn btn-primary services selected" : "btn btn-primary services"} onClick={() => setTarget("bayAnalytics")}>

                                            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <g clip-path="url(#clip0_593_624)">
                                                    <path d="M31.375 2.57812V27.9688H0.125V2.57812H31.375ZM2.07812 4.53125V8.4375H29.4219V4.53125H2.07812ZM29.4219 26.0156V10.3906H2.07812V26.0156H29.4219ZM4.03125 14.2969H5.98438V24.0625H4.03125V14.2969ZM7.9375 20.1562H9.89062V24.0625H7.9375V20.1562ZM11.8438 18.2031H13.7969V24.0625H11.8438V18.2031ZM15.75 12.3438H17.7031V24.0625H15.75V12.3438ZM23.5625 14.2969H25.5156V24.0625H23.5625V14.2969ZM19.6562 18.2031H21.6094V24.0625H19.6562V18.2031Z" fill={buttontarget == 'bayAnalytics' ? "#FFFAFA" : "#013096"} />
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_593_624">
                                                        <rect width="31.25" height="31.25" fill="white" transform="translate(0.125 0.625)" />
                                                    </clipPath>
                                                </defs>
                                            </svg>
                                            <div className="font-face-description mt-2">{'Bay Analytics Toolkit'}</div>
                                        </button>
                                    </div>
                                    <div>
                                        <button type="button" class={buttontarget == 'defectAnalytics' ? "btn btn-primary services selected" : "btn btn-primary services"} onClick={() => setTarget("defectAnalytics")}>
                                            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <g clip-path="url(#clip0_593_630)">
                                                    <path d="M18.5635 1.26587C19.6519 1.64225 20.6387 2.16105 21.5237 2.82227C22.4087 3.48348 23.1665 4.25659 23.7972 5.1416C24.4279 6.02661 24.9111 6.99809 25.2468 8.05603C25.5825 9.11397 25.7555 10.2177 25.7656 11.3672C25.7656 12.832 25.4859 14.1901 24.9264 15.4413C24.3669 16.6925 23.5734 17.842 22.546 18.8898C21.8238 19.6324 21.249 20.4207 20.8218 21.2549C20.3945 22.089 20.125 23.0249 20.0131 24.0625H10.0338C9.92192 23.0249 9.65743 22.089 9.24036 21.2549C8.82328 20.4207 8.24854 19.6375 7.51611 18.905C6.49886 17.8573 5.7054 16.7078 5.13574 15.4565C4.56608 14.2053 4.28125 12.8422 4.28125 11.3672C4.28125 10.3805 4.40841 9.42932 4.66272 8.51379C4.91703 7.59827 5.27816 6.73869 5.74609 5.93506C6.21403 5.13143 6.77352 4.40918 7.42456 3.76831C8.0756 3.12744 8.79785 2.56795 9.59131 2.08984C10.3848 1.61174 11.2393 1.25061 12.1548 1.00647C13.0703 0.762329 14.0265 0.635173 15.0234 0.625C15.1353 0.625 15.2421 0.630086 15.3439 0.640259C15.4456 0.650431 15.5575 0.66569 15.6796 0.686035L9.88123 6.48438L16.7172 13.3203L12.7041 17.3334L14.4283 19.0729L20.1656 13.3203L13.3297 6.48438L18.5635 1.26587ZM10.1406 26.0156H19.9062V28.9453C19.9062 29.3522 19.83 29.7337 19.6774 30.0897C19.5248 30.4458 19.3162 30.756 19.0518 31.0205C18.7873 31.285 18.477 31.4935 18.121 31.6461C17.7649 31.7987 17.3835 31.875 16.9766 31.875H13.0703C12.6634 31.875 12.2819 31.7987 11.9259 31.6461C11.5699 31.4935 11.2596 31.285 10.9951 31.0205C10.7306 30.756 10.5221 30.4458 10.3695 30.0897C10.2169 29.7337 10.1406 29.3522 10.1406 28.9453V26.0156Z" fill={buttontarget == 'defectAnalytics' ? "#FFFAFA" : "#013096"} />
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_593_630">
                                                        <rect width="31.25" height="31.25" fill="white" transform="translate(0.375 0.625)" />
                                                    </clipPath>
                                                </defs>
                                            </svg>

                                            <div className="font-face-description mt-2">{'Defect Analysis'}</div>
                                        </button>
                                    </div>
                                </div>
                            </Col>

                            <Col md={7} xs={7} lg={7} sm={7} className="mt-5 mb-5">
                                <ServicesCard
                                    target={buttontarget}
                                />
                            </Col>
                        </Row>
                    </div>

                    <div className="custom-slider teaser-slider d-lg-none services-container p-3">
                    <Row className="font-face-title-mobile"> <div className="pt-4 content-text">Our Services</div></Row>
                        <Slider {...settings} className="mb-5" arrows={false}>
                        
                             {
                                obj.map((x) => {
                                    return (

                                        <ServicesCardMobile target={x?.value}/>

                                    )
                                })
                            } 
                        
                        </Slider>

                    </div>
                </Container>
            </div>
        </>

    )
});

export default Services;